{"version":3,"sources":["core/math.js","components/charts/Chart.js","core/api/chart.js","core/api/sub.js","core/api/region.js","core/api/Api.js","panels/Home.js","panels/RegionsList.js","redux/actions/region.js","panels/RegionChart.js","App.js","redux/reducers/index.js","redux/reducers/region.js","redux/index.js","index.js"],"names":["decimalAdjust","type","value","exp","Math","isNaN","NaN","toString","split","round10","floor10","ceil10","title","headerAside","data","blured","header","aside","width","window","innerWidth","height","margin","top","right","left","bottom","className","strokeDasharray","dataKey","xAxisId","hide","domain","dataMax","length","confirmed","tickFormatter","round","y","label","parseInt","toLocaleString","stroke","name","fill","val","api","chartLocal","cid","handler","request","method","params","chartRegion","rid","chartRussia","chartWorld","checkSub","uid","sign","user","region","list","config","location","host","tag","options","fetch","abort","Object","keys","map","k","encodeURIComponent","join","then","response","ok","json","text","console","error","url","substr","catch","post","body","assign","JSON","stringify","chart","sub","forEach","a","Home","id","go","fetchedUser","fetchedWorldChart","fetchedChart","fetchedLocalChart","userIsSubscribed","setUserIsSubscribed","separator","date","Chart","size","onClick","e","bridge","send","group_id","Api","result","data-to","series","osName","platform","RegionsList","props","select","onSelectRegion","navigate","state","isLoading","regions","setState","this","IOS","expandable","key","confirmed_growth","cured","cured_growth","deaths","deaths_growth","React","Component","connect","ownProps","city","dispatch","Promise","resolve","reject","selectRegion","action","RegionChart","chartData","App","useState","activePanel","setActivePanel","setUser","setWorldChart","setChart","setLocalChart","popout","setPopout","useEffect","subscribe","detail","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","fetchData","currentTarget","dataset","to","showAllowMessages","log","appReducer","combineReducers","rootReducer","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.d80e28d9.chunk.js","sourcesContent":["// Замыкание\n(function() {\n  /**\n   * Корректировка округления десятичных дробей.\n   *\n   * @param {String}  type  Тип корректировки.\n   * @param {Number}  value Число.\n   * @param {Integer} exp   Показатель степени (десятичный логарифм основания корректировки).\n   * @returns {Number} Скорректированное значение.\n   */\n  function decimalAdjust(type, value, exp) {\n    // Если степень не определена, либо равна нулю...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // Если значение не является числом, либо степень не является целым числом...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Сдвиг разрядов\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Обратный сдвиг\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n\n  // Десятичное округление к ближайшему\n  if (!Math.round10) {\n    Math.round10 = function(value, exp) {\n      return decimalAdjust('round', value, exp);\n    };\n  }\n  // Десятичное округление вниз\n  if (!Math.floor10) {\n    Math.floor10 = function(value, exp) {\n      return decimalAdjust('floor', value, exp);\n    };\n  }\n  // Десятичное округление вверх\n  if (!Math.ceil10) {\n    Math.ceil10 = function(value, exp) {\n      return decimalAdjust('ceil', value, exp);\n    };\n  }\n})();\n","import React from 'react';\nimport { PanelHeader, Header, Div, Group, Button, Panel } from '@vkontakte/vkui';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ReferenceLine } from 'recharts';\n\nimport './styles.css';\n\n/**\n * [description]\n * @param  {String} title Заголовок\n */\nexport default ({title, headerAside, data, blured}) => (\n  <Group header={\n    <Header aside={headerAside}>{title}</Header>\n  }>\n    <BarChart\n      width={window.innerWidth}\n      height={300}\n      data={data}\n      margin={{top: 20, right: 30, left: 20, bottom: 5}}\n      className={blured ? 'BluredChart' : ''}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"day\" xAxisId={0} />\n      <XAxis dataKey=\"day\" xAxisId={1} hide />\n      <XAxis dataKey=\"day\" xAxisId={2} hide />\n      <YAxis\n        domain={[0, dataMax => (data[data.length-1].confirmed)]}\n        tickFormatter={round}\n      />\n      <Tooltip />\n      <Legend />\n      <ReferenceLine\n        y={data[data.length-1].confirmed}\n        label={\"Заражений на сегодня — \"+parseInt(data[data.length-1].confirmed).toLocaleString()}\n        stroke=\"#ccc\"\n      />\n      <Bar dataKey=\"confirmed\" name=\"Заражений\" xAxisId={0} fill=\"#8884d8\" />\n      <Bar dataKey=\"cured\" name=\"Вылечено\" xAxisId={1} fill=\"#82ca9d\" />\n      <Bar dataKey=\"deaths\" name=\"Погибло\" xAxisId={2} fill=\"#777\" />\n    </BarChart>\n  </Group>\n);\n\nconst round = (val) => {\n  if(val > 1000000) {\n     return Math.round10(val / 1000000, -1) + \" млн.\"\n  } else if(val > 1000) {\n     return Math.round10(val / 1000, -1) + \" тыс.\"\n  }\n  return val;\n}\n","/**\n * Методы для работы с графиками\n */\n\nconst api = {\n  /**\n   * Данные для графика города/области\n   * @param  {Number}   cid       ид. города\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartLocal: (cid, handler) => {\n    return api.request({method: 'chart/local', params: {cid: cid}, handler: handler});\n  },\n  /**\n   * Данные для графика города/области\n   * @param  {Number}   rid       ид. региона\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartRegion: (rid, handler) => {\n    return api.request({method: 'chart/region', params: {rid: rid}, handler: handler});\n  },\n  /**\n   * Данные для графика страны\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartRussia: (handler) => {\n    return api.request({method: 'chart/russia', handler: handler});\n  },\n  /**\n   * Данные для графика мира\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartWorld: (handler) => {\n    return api.request({method: 'chart/world', handler: handler});\n  }\n};\n\nexport default api;\n","/**\n * Методы для работы с подписками\n */\n\nconst api = {\n  /**\n   * Узнать подписан ли пользователь\n   * @param  {Number}   uid     ид. пользователя\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  checkSub: (uid, handler) => {\n    return api.request({method: 'sub/check', params: {uid: uid}, handler: handler});\n  },\n\n  /**\n   * Подписть пользователя\n   * @param  {Number}   user     ид. пользователя\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  sign: (user, handler) => {\n    return api.request({method: 'sub/sign', params: {uid: user}, handler: handler});\n  },\n};\n\nexport default api;\n","/**\n * Методы для работы с регионами\n */\n\nconst api = {region: {\n  /**\n   * Узнать подписан ли пользователь\n   * @param  {Number}   uid     ид. пользователя\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  list: (handler) => {\n    return api.request({method: 'region/index', handler: handler});\n  }\n}};\n\nexport default api;\n","/**\n * Работа с сервером\n */\nimport chart from './chart';\nimport sub from './sub';\nimport region from './region';\n\nconst config = {\n  domain: window.location.host == 'orlove.github.io' ? 'https://rest-news.hozya.ru' : 'https://api.newsapp.me'\n};\n\nvar api = {\n  /**\n   * Запрос данных с сервера\n   * @param  {String}   method  api-метод\n   * @param  {Object}   params  параметры api-метода\n   * @param  {mix}      tag     ключ запроса (для возможности его отмены)\n   * @param  {Function} handler обработчик ответа в случае успеха\n   * @param  {Object}   options доп. опции http-запроса (заголовки, метод и т.д.)\n   */\n  request: function ({method, params, tag, handler, options}) {\n\n    // Отменяем предыдущий ещё не завершенный запрос\n    if(tag) {\n      fetch.abort(tag);\n    }\n\n    // Преобразуем в url\n    if(params) {\n      params = Object.keys(params).map((k) =>\n          encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n      params = '?'+params;\n    } else {\n      params = '';\n    }\n\n    return fetch(config.domain+'/'+method+params, options, tag)\n      .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          response.text().then((text) => {\n            console.error(response.url, text.substr(-64), response);\n          });\n          return false;\n        }\n      })\n      .then(handler)\n      .catch((error) => {\n        console.error(error);\n        //this.setState({error: error, isLoading: false});\n      });\n  },\n  /**\n   * POST-запросы\n   * @param  {String}   method  api-метод\n   * @param  {Object}   body    тело запроса\n   * @param  {mix}      tag     ключ запроса (для возможности его отмены)\n   * @param  {Function} handler обработчик ответа в случае успеха\n   * @param  {Object}   options доп. опции http-запроса (заголовки, метод и т.д.)\n   */\n  post: function ({method, body, tag, handler, options}) {\n\n    // Отменяем предыдущий ещё не завершенный запрос\n    if(tag) {\n      fetch.abort(tag);\n    }\n\n    options = Object.assign({\n      method: 'POST',\n      /*headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },*/\n      body: JSON.stringify(body)\n    }, options || {});\n\n    return fetch(config.domain+'/'+method, options, tag)\n      .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          response.text().then((text) => {\n            console.error(response.url, text.substr(-64), response);\n          });\n          return false;\n        }\n      })\n      .then(handler)\n      .catch((error) => {\n        console.error(error);\n        //this.setState({error: error, isLoading: false});\n      });\n  },\n  /**\n   * Отменяет запрос с ключем tag\n   * @param {mix} tag ключ запроса\n   */\n  abort: (tag) => {\n    fetch.abort(tag);\n  },\n  /**\n   * Список городов\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  /*cities: (handler) => {\n    return api.request({method: 'cities', handler: (response) => {\n      if(response.items) {\n        handler(response.items);\n      }\n    }});\n  }*/\n};\n\n// Сливаем каждый компонент с api\n[chart, sub, region].forEach((a) => {\n  api = Object.assign(a, api);\n});\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport { PanelHeader, Header, Div, Group, Button, Panel } from '@vkontakte/vkui';\nimport Chart from '../components/charts/Chart';\n\nimport './Home.css';\n\nimport Api from '../core/api/Api';\n\nconst Home = ({ id, go, fetchedUser, fetchedWorldChart, fetchedChart, fetchedLocalChart, userIsSubscribed, setUserIsSubscribed }) => {\n\n\treturn (\n\t\t<Panel id={id} separator={false}>\n\t\t\t{fetchedLocalChart && <PanelHeader>{fetchedLocalChart.date}</PanelHeader>}\n\t\t\t{/*fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>*/}\n\n\t\t\t{fetchedChart && <Chart\n\t\t\t\ttitle=\"Динамика заражений в России\"\n\t\t\t\tdata={fetchedChart}\n\t\t\t/>}\n\n\t\t\t{!userIsSubscribed && <Group className=\"SignGroup\" separator=\"hide\">\n\t\t\t\t<Div className=\"BtnContainer\">\n\t\t\t\t\t<Button size=\"l\" onClick={e => {\n\t\t\t\t\t\tbridge.send(\"VKWebAppAllowMessagesFromGroup\", {group_id: 193696611})\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tApi.post({method: 'sub/sign', body: fetchedUser, handler: (result) => {\n\t\t\t\t\t\t\t\tsetUserIsSubscribed(true);\n\t\t\t\t\t\t\t}});\n\t\t\t\t\t  });\n\t\t\t\t\t}}>\n\t\t\t\t\t\tПолучать статистику в личные сообщения\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>}\n\n\t\t\t{fetchedLocalChart && <Chart\n\t\t\t\ttitle={\"В \" + fetchedLocalChart.region.name}\n\t\t\t\theaderAside={<Button onClick={go} data-to=\"regions-list\">Другие регионы</Button>}\n\t\t\t\tdata={fetchedLocalChart.series}\n\t\t\t\tblured={!userIsSubscribed}\n\t\t\t/>}\n\n\t\t\t{fetchedWorldChart && <Chart\n\t\t\t\ttitle=\"В мире\"\n\t\t\t\tdata={fetchedWorldChart}\n\t\t\t/>}\n\n\t\t</Panel>\n)};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t})\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport { Panel, PanelHeader, PanelHeaderButton, List, Cell, Group, ScreenSpinner, Counter, Div } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport Api from '../core/api/Api';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { selectRegion } from '../redux/actions/region';\n\nimport './RegionsList.css';\n\nconst osName = platform();\n\nclass RegionsList extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {isLoading: true};\n  };\n\n\t// Компонент примонтирован\n\tcomponentDidMount() {\n\t\tApi.region.list((regions) => {\n      this.setState({\n        isLoading: false,\n        regions: regions,\n      });\n    });\n  };\n\n\t// Выбор региона\n  select = (region) => {\n    this.props.onSelectRegion(region).then(() => this.props.navigate('region-chart'));\n  };\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={() => {this.props.navigate('home')}}>\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tСтатистика по регионам\n\t\t\t\t</PanelHeader>\n\t\t\t\t{!this.state.isLoading && <Group>\n\t\t      <List className=\"RegionsList\">\n\t\t\t\t\t\t<Cell expandable>\n\t\t\t\t\t\t\t<Div></Div><Div>Заражений</Div><Div>Вылечено</Div><Div>Погибло</Div>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t{this.state.regions.map((region) => {\n              return (\n\t\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t\tkey={\"region\" + region.rid}\n\t\t\t\t\t\t\t\t\texpandable\n\t\t\t\t\t\t\t\t\tonClick={() => {this.select(region)}}\n\t\t\t\t\t\t\t\t>\n\t\t\t        \t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{region.name}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{region.confirmed}\n\t\t\t\t\t\t\t\t\t\t{region.confirmed_growth == 0 ? false : <Counter size=\"s\">+{region.confirmed_growth}</Counter>}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{region.cured}\n\t\t\t\t\t\t\t\t\t\t{region.cured_growth == 0 ? false : <Counter size=\"s\">+{region.cured_growth}</Counter>}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{region.deaths}\n\t\t\t\t\t\t\t\t\t\t{region.deaths_growth == 0 ? false : <Counter size=\"s\">+{region.deaths_growth}</Counter>}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</List>\n\t\t\t\t</Group>}\n\t\t\t\t{this.state.isLoading && <ScreenSpinner size='large' />}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      city: state.region\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      onSelectRegion: (region) =>\n        new Promise((resolve) =>\n          selectRegion(region).then((action) => {\n            dispatch(action);\n            resolve();\n          })\n        )\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionsList);\n","/**\n * Действия связанные с регионами\n */\n\n/**\n * Применить фильтр\n * @param  {Object} region  объект с параметрами региона\n * @return {Promise}\n */\nexport const selectRegion = (region) => {\n  return new Promise((resolve, reject) => {\n      resolve({\n        type: 'REGION_SELECT',\n        region: region\n      });\n  });\n};\n","import React from 'react';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport { Panel, PanelHeader, Header, PanelHeaderButton, List, Cell, Group, ScreenSpinner, Counter, Div } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Chart from '../components/charts/Chart';\n\nimport Api from '../core/api/Api';\n\n// Redux\nimport { connect } from 'react-redux';\n\nconst osName = platform();\n\nclass RegionChart extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {isLoading: true};\n  };\n\n\t// Компонент примонтирован\n\tcomponentDidMount() {\n\t\t// График города/области\n\t\tApi.chartRegion(this.props.region.rid, (chartData) => {\n      this.setState({\n        isLoading: false,\n        chartData: chartData\n      });\n    });\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={() => {this.props.navigate('regions-list')}}>\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tСтатистика\n\t\t\t\t</PanelHeader>\n\t\t\t\t{!this.state.isLoading && <Chart\n\t\t\t\t\ttitle={\"Динамика заражений в \" + this.state.chartData.region.name}\n\t\t\t\t\tdata={this.state.chartData.series}\n\t\t\t\t/>}\n\t\t\t\t{this.state.isLoading && <ScreenSpinner size='large' />}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      region: state.region\n  };\n};\n\nexport default connect(mapStateToProps)(RegionChart);\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport RegionsList from './panels/RegionsList';\nimport RegionChart from './panels/RegionChart';\n\nimport Api from './core/api/Api';\nimport './core/math';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedWorldChart, setWorldChart] = useState(null);\n\tconst [fetchedChart, setChart] = useState(null);\n\tconst [fetchedLocalChart, setLocalChart] = useState(null);\n\tconst [userIsSubscribed, setUserIsSubscribed] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\n\t\t\t// Графики мира и России\n\t\t\tApi.chartWorld((chartData) => setWorldChart(chartData));\n\t\t\tApi.chartRussia((chartData) => setChart(chartData));\n\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\n\t\t\t// График города/области\n\t\t\tApi.chartLocal(user.city && user.city.id ? user.city.id : 1, (chartData) => setLocalChart(chartData));\n\n\t\t\t// Узнать подписан или нет\n\t\t\tApi.checkSub(user.id, (userIsSubscribed) => setUserIsSubscribed(userIsSubscribed));\n\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget ? e.currentTarget.dataset.to : e);\n\t};\n\n  const showAllowMessages = e => {\n\t\tApi.post({method: 'sub/sign', body: fetchedUser, handler: (result) => console.log('result', result)});\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home'\n\t\t\t\tfetchedUser={fetchedUser}\n\t\t\t\tfetchedWorldChart={fetchedWorldChart}\n\t\t\t\tfetchedChart={fetchedChart}\n\t\t\t\tfetchedLocalChart={fetchedLocalChart}\n\n\t\t\t\tuserIsSubscribed={userIsSubscribed}\n\t\t\t\tsetUserIsSubscribed={setUserIsSubscribed}\n\n\t\t\t\tgo={go}\n\t\t\t\tshowAllowMessages={showAllowMessages}\n\t\t\t/>\n\t\t\t<RegionsList id='regions-list' navigate={go} />\n\t\t\t<RegionChart id='region-chart' navigate={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n","/**\n * Комбинаяия редукторов\n */\nimport { combineReducers } from 'redux';\nimport region from './region';\n\nconst appReducer = combineReducers({\n    region\n});\n\nconst rootReducer = (state, action) => {\n  // При разлогиневании пользователя стираем все состояние\n  /*if (action.type === 'LOGOUT') {\n    state = undefined\n  }*/\n\n  return appReducer(state, action)\n}\n\nexport default rootReducer;\n","/**\n * Редуктор регионов\n */\n\nexport default function reducer(state = null, action) {\n    switch (action.type) {\n        // Выбор региона\n        case 'REGION_SELECT':\n            return Object.assign({}, state, action.region);\n        default:\n            return state;\n    }\n}\n","/**\n * Определение хранилища состояния приложения\n * Работает через Redux Persist (хранит состояние в AsyncStorage)\n */\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\n// defaults to localStorage for web and AsyncStorage for react-native\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer);\n\nexport const persistor = persistStore(store);\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Всё для управления и хранения состояния приложения (Redux)\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/index';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>, document.getElementById(\"root\")\n);\n\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(eruda => {}); //runtime download\n}\n"],"sourceRoot":""}