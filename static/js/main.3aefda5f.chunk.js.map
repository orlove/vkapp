{"version":3,"sources":["img/persik.png","core/api/chartApi.js","core/api/subApi.js","core/api/Api.js","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","api","chartLocal","cid","handler","request","method","params","chartRussia","chartWorld","checkSub","uid","sign","user","config","tag","options","fetch","abort","Object","keys","map","k","encodeURIComponent","join","then","response","ok","json","text","console","error","url","substr","catch","setState","isLoading","post","body","assign","JSON","stringify","forEach","a","Home","id","fetchedUser","go","fetchedWorldChart","fetchedChart","fetchedLocalChart","userIsSubscribed","setUserIsSubscribed","separator","header","width","window","innerWidth","height","data","margin","top","right","left","bottom","reverseStackOrder","strokeDasharray","dataKey","y","length","confirmed","label","stroke","name","stackId","fill","className","size","level","onClick","e","Api","result","region","series","osName","platform","Persik","props","data-to","IOS","src","persik","alt","App","useState","activePanel","setActivePanel","setUser","setWorldChart","setChart","setLocalChart","popout","setPopout","useEffect","chartData","bridge","send","city","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","attributes","setNamedItem","fetchData","currentTarget","dataset","to","showAllowMessages","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3aefda5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","/**\n * Методы для работы с графиками\n */\n\nconst api = {\n  /**\n   * Данные для графика города/области\n   * @param  {Number}   cid       ид. города\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartLocal: (cid, handler) => {\n    return api.request({method: 'chart/local', params: {cid: cid}, handler: handler});\n  },\n  /**\n   * Данные для графика страны\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartRussia: (handler) => {\n    return api.request({method: 'chart/russia', handler: handler});\n  },\n  /**\n   * Данные для графика мира\n   * @param  {Function} handler   обработчик ответа в случае успеха\n   */\n  chartWorld: (handler) => {\n    return api.request({method: 'chart/world', handler: handler});\n  }\n};\n\nexport default api;\n","/**\n * Методы для работы с подписками\n */\n\nconst api = {\n  /**\n   * Узнать подписан ли пользователь\n   * @param  {Number}   uid     ид. пользователя\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  checkSub: (uid, handler) => {\n    return api.request({method: 'sub/check', params: {uid: uid}, handler: handler});\n  },\n\n  /**\n   * Подписть пользователя\n   * @param  {Number}   user     ид. пользователя\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  sign: (user, handler) => {\n    return api.request({method: 'sub/sign', params: {uid: user}, handler: handler});\n  },\n};\n\nexport default api;\n","/**\n * Работа с сервером\n */\nimport chartApi from './chartApi';\nimport subApi from './subApi';\n\nconst config = {\n  //domain: 'https://api.newsapp.me',\n  domain: 'https://rest-news.hozya.ru'\n};\n\nvar api = {\n  /**\n   * Запрос данных с сервера\n   * @param  {String}   method  api-метод\n   * @param  {Object}   params  параметры api-метода\n   * @param  {mix}      tag     ключ запроса (для возможности его отмены)\n   * @param  {Function} handler обработчик ответа в случае успеха\n   * @param  {Object}   options доп. опции http-запроса (заголовки, метод и т.д.)\n   */\n  request: function ({method, params, tag, handler, options}) {\n\n    // Отменяем предыдущий ещё не завершенный запрос\n    if(tag) {\n      fetch.abort(tag);\n    }\n\n    // Преобразуем в url\n    if(params) {\n      params = Object.keys(params).map((k) =>\n          encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n      params = '?'+params;\n    } else {\n      params = '';\n    }\n\n    return fetch(config.domain+'/'+method+params, options, tag)\n      .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          response.text().then((text) => {\n            console.error(response.url, text.substr(-64), response);\n          });\n          return false;\n        }\n      })\n      .then(handler)\n      .catch((error) => {\n        console.error(error);\n        this.setState({error: error, isLoading: false});\n      });\n  },\n  /**\n   * POST-запросы\n   * @param  {String}   method  api-метод\n   * @param  {Object}   body    тело запроса\n   * @param  {mix}      tag     ключ запроса (для возможности его отмены)\n   * @param  {Function} handler обработчик ответа в случае успеха\n   * @param  {Object}   options доп. опции http-запроса (заголовки, метод и т.д.)\n   */\n  post: function ({method, body, tag, handler, options}) {\n\n    // Отменяем предыдущий ещё не завершенный запрос\n    if(tag) {\n      fetch.abort(tag);\n    }\n\n    options = Object.assign({\n      method: 'POST',\n      /*headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },*/\n      body: JSON.stringify(body)\n    }, options || {});\n\n    return fetch(config.domain+'/'+method, options, tag)\n      .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          response.text().then((text) => {\n            console.error(response.url, text.substr(-64), response);\n          });\n          return false;\n        }\n      })\n      .then(handler)\n      .catch((error) => {\n        console.error(error);\n        //this.setState({error: error, isLoading: false});\n      });\n  },\n  /**\n   * Отменяет запрос с ключем tag\n   * @param {mix} tag ключ запроса\n   */\n  abort: (tag) => {\n    fetch.abort(tag);\n  },\n  /**\n   * Список городов\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  /*cities: (handler) => {\n    return api.request({method: 'cities', handler: (response) => {\n      if(response.items) {\n        handler(response.items);\n      }\n    }});\n  }*/\n};\n\n// Сливаем каждый компонент с api\n[chartApi, subApi].forEach((a) => {\n  api = Object.assign(a, api);\n});\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Div, Group, Button, Panel } from '@vkontakte/vkui';\n\nimport './Home.css';\n\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ReferenceLine } from 'recharts';\n\nimport Api from '../core/api/Api';\n\nconst Home = ({ id, go, fetchedUser, fetchedWorldChart, fetchedChart, fetchedLocalChart, userIsSubscribed, setUserIsSubscribed }) => {\n\n\treturn (\n\t\t<Panel id={id} separator={false}>\n\t\t\t{/*fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>*/}\n\n\t\t\t{fetchedWorldChart && <Group header={<Header>Динамика заражений в мире</Header>}>\n\t\t\t\t<BarChart\n\t        width={window.innerWidth}\n\t        height={300}\n\t        data={fetchedWorldChart}\n\t        margin={{\n\t          top: 20, right: 30, left: 20, bottom: 5,\n\t        }}\n\t\t\t\t\treverseStackOrder={true}\n\t      >\n\t        <CartesianGrid strokeDasharray=\"3 3\" />\n\t        <XAxis dataKey=\"day\" />\n\t        <YAxis />\n\t        <Tooltip />\n\t        <Legend />\n\t\t\t\t\t<ReferenceLine\n\t\t\t\t\t\ty={fetchedWorldChart[fetchedWorldChart.length-1].confirmed}\n\t\t\t\t\t\tlabel={\"Заражений на сегодняшний день — \"+fetchedWorldChart[fetchedWorldChart.length-1].confirmed}\n\t\t\t\t\t\tstroke=\"#ccc\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Bar dataKey=\"deaths\" name=\"Погибло\" stackId=\"a\" fill=\"#777\" />\n\t\t\t\t\t<Bar dataKey=\"cured\" name=\"Вылечено\" stackId=\"a\" fill=\"#82ca9d\" />\n\t\t\t\t\t<Bar dataKey=\"confirmed\" name=\"Заражений\" stackId=\"a\" fill=\"#8884d8\" />\n\t      </BarChart>\n\t\t\t</Group>}\n\n\t\t\t{fetchedChart && <Group header={<Header>Динамика заражений в России</Header>}>\n\t\t\t\t<BarChart\n\t        width={window.innerWidth}\n\t        height={300}\n\t        data={fetchedChart}\n\t        margin={{\n\t          top: 20, right: 30, left: 20, bottom: 5,\n\t        }}\n\t\t\t\t\treverseStackOrder={true}\n\t      >\n\t        <CartesianGrid strokeDasharray=\"3 3\" />\n\t        <XAxis dataKey=\"day\" />\n\t        <YAxis />\n\t        <Tooltip />\n\t        <Legend />\n\t\t\t\t\t<ReferenceLine\n\t\t\t\t\t\ty={fetchedChart[fetchedChart.length-1].confirmed}\n\t\t\t\t\t\tlabel={\"Заражений на сегодняшний день — \"+fetchedChart[fetchedChart.length-1].confirmed}\n\t\t\t\t\t\tstroke=\"#ccc\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Bar dataKey=\"deaths\" name=\"Погибло\" stackId=\"a\" fill=\"#777\" />\n\t\t\t\t\t<Bar dataKey=\"cured\" name=\"Вылечено\" stackId=\"a\" fill=\"#82ca9d\" />\n\t\t\t\t\t<Bar dataKey=\"confirmed\" name=\"Заражений\" stackId=\"a\" fill=\"#8884d8\" />\n\t      </BarChart>\n\t\t\t</Group>}\n\n\t\t\t{!userIsSubscribed && <Group className=\"SignGroup\" separator=\"hide\">\n\t\t\t\t{/*<Div>\n\t\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\t\tShow me the Persik, please\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>*/}\n\t\t\t\t<Div>\n\t\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={e => {\n\t\t\t\t\t\tApi.post({method: 'sub/sign', body: fetchedUser, handler: (result) => {\n\t\t\t\t\t\t\tsetUserIsSubscribed(true);\n\t\t\t\t\t\t}});\n\t\t\t\t\t}}>\n\t\t\t\t\t\tПолучать статистику в личные сообщения\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>}\n\n\t\t\t{fetchedLocalChart && <Group header={<Header>Динамика заражений в {fetchedLocalChart.region.name}</Header>}>\n\t\t\t\t<BarChart\n\t        width={window.innerWidth}\n\t        height={300}\n\t        data={fetchedLocalChart.series}\n\t\t\t\t\tclassName={!userIsSubscribed ? 'BluredCityChart' : ''}\n\t        margin={{\n\t          top: 20, right: 30, left: 20, bottom: 5,\n\t        }}\n\t      >\n\t        <CartesianGrid strokeDasharray=\"3 3\" />\n\t        <XAxis dataKey=\"day\"/>\n\t        <YAxis />\n\t        <Tooltip />\n\t        <Legend />\n\t\t\t\t\t<ReferenceLine\n\t\t\t\t\t\ty={fetchedLocalChart.series[fetchedLocalChart.series.length-1].confirmed}\n\t\t\t\t\t\tlabel={\"Заражений на сегодняшний день — \"+fetchedLocalChart.series[fetchedLocalChart.series.length-1].confirmed}\n\t\t\t\t\t\tstroke=\"#ccc\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Bar dataKey=\"confirmed\" name=\"Заражений\" stackId=\"a\" fill=\"#8884d8\">\n\t\t\t\t\t\t{/*<Text>\n\t\t\t\t\t\t\t{\"Заражений \"+fetchedLocalChart.series[fetchedLocalChart.series.length-1].confirmed}\n\t\t\t\t\t\t</Text>*/}\n\t\t\t\t\t</Bar>\n\t\t\t\t\t<Bar dataKey=\"cured\" name=\"Вылечено\" stackId=\"a\" fill=\"#82ca9d\" />\n\t\t\t\t\t<Bar dataKey=\"deaths\" name=\"Погибло\" stackId=\"a\" fill=\"#777\" />\n\t      </BarChart>\n\t\t\t</Group>}\n\n\t\t</Panel>\n)};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t})\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nimport Api from './core/api/Api';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedWorldChart, setWorldChart] = useState(null);\n\tconst [fetchedChart, setChart] = useState(null);\n\tconst [fetchedLocalChart, setLocalChart] = useState(null);\n\tconst [userIsSubscribed, setUserIsSubscribed] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\n\t\t\t// Графики мира и России\n\t\t\tApi.chartWorld((chartData) => setWorldChart(chartData));\n\t\t\tApi.chartRussia((chartData) => setChart(chartData));\n\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\n\t\t\t// График города/области\n\t\t\tApi.chartLocal(user.city.id, (chartData) => setLocalChart(chartData));\n\n\t\t\t// Узнать подписан или нет\n\t\t\tApi.checkSub(user.id, (userIsSubscribed) => setUserIsSubscribed(userIsSubscribed));\n\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n  const showAllowMessages = e => {\n\t\tApi.post({method: 'sub/sign', body: fetchedUser, handler: (result) => console.log('result', result)});\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout} header={false}>\n\t\t\t<Home id='home'\n\t\t\t\tfetchedUser={fetchedUser}\n\t\t\t\tfetchedWorldChart={fetchedWorldChart}\n\t\t\t\tfetchedChart={fetchedChart}\n\t\t\t\tfetchedLocalChart={fetchedLocalChart}\n\n\t\t\t\tuserIsSubscribed={userIsSubscribed}\n\t\t\t\tsetUserIsSubscribed={setUserIsSubscribed}\n\n\t\t\t\tgo={go}\n\t\t\t\tshowAllowMessages={showAllowMessages}\n\t\t\t/>\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(eruda => {}); //runtime download\n}\n"],"sourceRoot":""}